#!/bin/bash
# svn-to-git
# Created Mon Jun 13 14:47:05 AKDT 2016
# Copyright (C) 2016 by Raymond E. Marcil <marcilr@gmail.com>
#
# Converted svn repository to git.
#
# Usage: ${0} <svn> <git>"
#     -d | --debug   Enable debugging.
#     -h | --help    Create non-hierarchical repository.
#     <svn>          Local subversion repository path.
#                      like: /data/svnroot/tex/wrt54gl/wrt54gl/
#     <git>          Local git repository path.
#                      like: /data/git/tex/wrt54gl/
#
# 1. Create /tmp/svn-to-git/ temporary directory
# 2. Copy source svn repo to temporary directory
#

# =================================================
# Configuration
# =================================================

#
# Enable/disable debugging.
#
DEBUG=true

TMPDIR=/tmp/${0}

# Configure svn and git base directories
SVNROOT=/data/svnroot
GITROOT=/data/git


# =================================================
# Binaries
# =================================================
BASENAME=/usr/bin/basename
MKDIR=/bin/mkdir
RM=/bin/rm

# =================================================
# Functions
# =================================================

#
# debug()
# Output debugging text.
# INPUT: $1 - Text to output if DEBUG="
#
function debug {

  if [ ${DEBUG} = "true" ]; then
    echo "debug() ${1}"
  fi

}


#
# message()
# Display specified message passed as argument.
#
# INPUT
# =====
# Message to display as argument.
#
# RESULTS
# =======
# Displays argument to stdio.
#
function message {

  echo "${1}"

}


#
# usage()
# Display usage and exit.
#
function usage(){
  message "Usage: ${0} <svn> <git>"
  message "   -d | --debug   Enable debugging."
  message "   -h | --help    Create non-hierarchical repository."
  message "  <svn>           Local subversion repository path."
  message "                    like: /data/svnroot/tex/wrt54gl/wrt54gl/"
  message "  <git>           Local git repository path."
  message "                    like: /data/git/tex/wrt54gl/"
  message
}


#
# process-cli-args()
#
# Links
# =====
# How to process command-line args in bash scripts
# http://debaan.blogspot.com/2007/06/how-to-process-command-line-args-in.html
#
function process-cli-args(){

  if [ -z ${2} ]; then usage; fi

  debug "process-cli-args(): START"

  # Display number of command line arguments
  debug "process-cli-args(): number args=${#commandline_args[@]}"

  # Loop over command line arguments (in correct order).
  for arg in "${commandline_args[@]}"; do
    case ${arg} in
      "-d" | "--debug")
        DEBUG=true
        debug "DEBUG=true"
        ;;
      "-h" | "--help")
        usage
        exit 0
        ;;
      *)
        ;;
    esac
  done

  debug "process-cli-args(): END"

} # End process-cli-args()


#
# Create temporary directory
# Removes and creates new temporary directory.
#
# USES: TMPDIR
#
function create-temporary-directory() {
  debug "create-temporary-directory() START"

  debug "TMPDIR: ${TMPDIR}"

  # Safely remove temporary directory contents
  if [ -d "${TMPDIR}" ]; then
    debug "Removing ${TMPDIR}"
    CMD="${RM} -rf ${TMPDIR}"
    debug "Executing: ${CMD}"
    eval "${CMD}"
  fi

  debug "Creating ${TMPDIR}"
  CMD="${MKDIR} ${TMPDIR}"
  debug "Executing: ${CMD}"
  eval "${CMD}"

  debug "create-temporary-directory() END"

} # End create-temporary-directory()




# =================================================
# Main
# =================================================
debug "Main: START"

# Save command line arguments in global variable for use by process-cli-args.
commandline_args=("$@")

# Process command-line arguments.
process-cli-args



BASE=`${BASENAME} "${0}"`

TMPDIR="/tmp/${BASE}"

# Create temporary directory
create-temporary-directory


debug "Main: END"

